Comment 1 
  Comment 1.1, di comment oleh User A
  Comment 1.2
  @UserA , Comment 1.3
  @comment1.1 , Comment 1.4

..
  ..
    ..
      ..
        ..
          ..
            ..
              ..
                ..
                  ..
rep_comments: [
  {
    uuid: generate(uuid),   // or primary key in table
    context: '',
    author: author1,
    depends_on: ''
  },
  {
    uuid: uuid2,
    context: '',
    author: author2,
    depends_on: author1
  },
  {
    uuid: generate(uuid),
    context: '',
    author: author3,
    depends_on: uuid2
  }
]

Comment 1 
  Comment 1.1, di comment oleh User A
  Comment 1.2
  @UserA , Comment 1.3
  @comment1.1 , Comment 1.4

Comment 2
  Comment 2.1

post /comments => buat comment baru sejajar dengan Comment 1
post /comments/:id => emmbed comment in rep_comments yang id tertentu, Comment 1.1 / 1.2 / ...
  => find comments :id 
  => update rep_comments dengan payload yg baru
    const payload = { 
      uuid: generate(uuid v4) // https://www.npmjs.com/package/uuid
      context: req.body.context,
      author: req.userLogin.userId,
      depends_on: {
        author: req.body.depends_on.author,
        uuid: req.body.depends_on.uuid
      }
    }

  => update nya harus di push dari rep_comments yang sebelumnya
    const comments = await Commment.findOne({ where: { id: req.params.id }})
    const rep_comments = comments.rep_comments
    const new_rep_comment = [ ...rep_comments, payload]
    await Comment.update({
      rep_comments: new_rep_comment
    }, {
      where: {
        id: req.params.id
      }
    })

//-----------------------------------------------------------------------------
getComments By IssueID
[
  {
    userID: 'userId', // perlu JOIN ke USER
    context: ...,
    issueID: ...,
    rep_comments: [
      {
        uuid: uuid1,
        context: '',
        author: { // ini kan userID, nanti di display kita butuh avatar dan userNamenya juga
          userID: '', // kita HANYA NGAMBIL DATA DARI TOKEN LOGIN. => req.loginUser
          userName: '',
          avatar: ''
        },
        depends_on: {
          author: '',
          uuid: '' 
        },
        likes: [],
        createdAt: new Date(),
        updatedAt: new Date()
      },
      {
        uuid: uuid2,
        context: '',
        author: author2,
        depends_on: {
          author: { // NGAMBIL DATA DARI USER
            userID: '',
            userName: '',
            avatar: ''
          },
          uuid: '' // ngambil data dari uuid
        } ,
        likes: []
      },
      {
        uuid: uuid3,
        context: '',
        author: {
          userID: '',
          userName: '',
          avatar: ''
        },
        depends_on: {
          author: {
            userID: '',
            userName: '',
            avatar: ''
          },
          uuid: uuid2 
        },
        likes: []
      }
    ]
  }
]

...
  avatar => username => contextnya apa => (jika dia depends_on author / uuid, maka nanti ada embed @USER atau @Comment)

----------------------------------------------------------------------------------------------
update like in comment

patch /comments/:commentID 
  body : {
    rep_comments_uuid: ''
    like: boolean
  }

jika ada fitur dislike, maka di dalam table comment, likes type JSON, tapi berubah array of userID
jika body likenya false, maka ngehapus userID di dalam comment likes, kalau true, nambahin userID

jika di body rep_comments_uuid nya ada, maka yang di update adalah column likes yang di dalam rep_comments_uuid
else update column likes yang di table comments

// update like in rep_comments

// patch /comments/:commentID/:rep_comments_uuid


//-----------------------------------------------------------
reward

userID
point
amount
noHp
accountName
status => (pending, settled, failed) => kalau gagal, point harus di balikin.
notes => biasanya notes ini untuk kasih catatan jika failed
claimDate => tanggal claim
settlementDate => tanggal kita kasih reward


//----------------------------------------------------------------------------------
```
[
    {
      "documentation_id": 1,
      "caption" : "Peduli lingkungan untuk bumi yang lebih baik.",
      "image" : "https://images.unsplash.com/photo-1617450365226-9bf28c04e130?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=870&q=80["](https://images.unsplash.com/photo-1617450365226-9bf28c04e130?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=870&q=80),
      "messages" : "Sangat menyenangkan bisa berkontribusi untuk bumi. Semangat selalu dalam merawat bumi kita!",
      "participant_id" : "2",
      "tanam_pohon_id" : 12,
      "createdAt": "2021-12-24T09:08:30.000Z",
      "updatedAt": "2021-12-24T09:08:30.000Z",
      tanamPohon: {
        id: 12,
        title: 'tanam pohon 12',
        ...
      }
    },
    {
      "documentation_id": 1,
      "caption" : "Peduli lingkungan untuk bumi yang lebih baik.",
      "image" : "https://images.unsplash.com/photo-1617450365226-9bf28c04e130?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=870&q=80["](https://images.unsplash.com/photo-1617450365226-9bf28c04e130?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=870&q=80),
      "messages" : "Sangat menyenangkan bisa berkontribusi untuk bumi. Semangat selalu dalam merawat bumi kita!",
      "participant_id" : "2",
      "tanam_pohon_id" : 12,
      "createdAt": "2021-12-24T09:08:30.000Z",
      "updatedAt": "2021-12-24T09:08:30.000Z",
      tanamPohon: {
        id: 12,
        title: 'tanam pohon 12',
        ...
      }
    },
    ...
  ]
```


di UI, di group by tanam pohon => 
  [
    {
      id: 'id_tanam_pohon',
      title: 'tanam_pohon_12',
      image: 'image_tanam_phon',
      description: 'description tanam pohon'
      documentations: [
        {
          "documentation_id": 1,
          "caption" : "Peduli lingkungan untuk bumi yang lebih baik.",
          "image" : "https://images.unsplash.com/photo-1617450365226-9bf28c04e130?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=870&q=80["](https://images.unsplash.com/photo-1617450365226-9bf28c04e130?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=870&q=80),
          "messages" : "Sangat menyenangkan bisa berkontribusi untuk bumi. Semangat selalu dalam merawat bumi kita!",
          "participant_id" : "2",
          "tanam_pohon_id" : 12,
          "createdAt": "2021-12-24T09:08:30.000Z",
          "updatedAt": "2021-12-24T09:08:30.000Z",
        },
        {
          "documentation_id": 1,
          "caption" : "Peduli lingkungan untuk bumi yang lebih baik.",
          "image" : "https://images.unsplash.com/photo-1617450365226-9bf28c04e130?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=870&q=80["](https://images.unsplash.com/photo-1617450365226-9bf28c04e130?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=870&q=80),
          "messages" : "Sangat menyenangkan bisa berkontribusi untuk bumi. Semangat selalu dalam merawat bumi kita!",
          "participant_id" : "2",
          "tanam_pohon_id" : 12,
          "createdAt": "2021-12-24T09:08:30.000Z",
          "updatedAt": "2021-12-24T09:08:30.000Z",
        }
      ]
    }
  ]

get /documentations
  await TanamPohon.findAll({
    include: {
      model: Documentation,
      include: {
        model: Participant
      }
    }
  })

get /documentations/tanam_pohon/:tanam_pohon_id
  await TanamPohon.findOne({
    include: {
      model: Documentation,
      include: {
        model: Participant
      }
    },
    where: {
      id: Number(req.params.tanam_pohon_id)
    }
  })

get /documentations/:id
  await Documentation.findOne({
    where: {
      id: Number(req.params.id),
    },
    include: {
      model: Participant
    }
  })

--------------------------------
get /tanam_pohon
  await TanamPohon.findAll({
    include: {
      model: Participant,
      attributes: ['userId']    // ini untuk penanda button orange / yellow in card tanam pohon
    }
  })

get /tanam_pohon/:id
  await TanamPohon.findOne({
    include: {
      model: Participant,
      attributes: ['userId']    // ini untuk penanda dia daftar / unggah foto
    },
    where: {
      id: Number(req.params.id),
    }
  })